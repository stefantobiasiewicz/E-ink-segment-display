/*  This sketch send data in a 1.9inch Segment E-Paper Module.
    The original EPD_1.9 library has been modified as some control functions 
    (GPIOInit, ReadBusy, and Reset) must refer to Agrumino library. */
 
#include <stdio.h>
#include <Wire.h>             // used to communicate with I2C devices.
#include "Lifely_EPD_1in9.h"  // used to communicate with E-Paper Display.
#include <Agrumino.h>         // used to communicate with Agrumino board.
#define SLEEP_TIME_SEC 10     // used to set the deep sleep time in seconds.
Agrumino agrumino;

float temperature_value =0.0;
float humidity_value =0.0;
void delaySec(int sec) { delay(sec * 1000); }

void deepSleepSec(int sec) {
  ESP.deepSleep(sec * 1000000); // microseconds
}

char digit_left[] = {0xbf, 0x00, 0xfd, 0xf5, 0x47, 0xf7, 0xff, 0x21, 0xff, 0xf7, 0x00};  // individual segments for the left part od the digit, index 10 is empty
char digit_right[] ={0x1f, 0x1f, 0x17, 0x1f, 0x1f, 0x1d, 0x1d, 0x1f, 0x1f, 0x1f, 0x00};  // individual segments for the right part od the digit, index 10 is empty
char temperature_digits[] = {1, 2, 3, 4}; // temperature digits > 1, 2, 3, 4 = 123.4°C
char humidity_digits[] = {5, 6, 7}; // humidity digits > 5, 6, 7 = 56.7%
unsigned char eink_segments[]  = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       };  // all white, but will be updated later with proper digits

void GPIOInit()
{
  agrumino.setGPIOMode(GPIO_2 , GPIO_INPUT);  
  agrumino.setGPIOMode(GPIO_1 , GPIO_OUTPUT);  
}

void EPD_1in9_ReadBusy()
{   
  Serial.println("wait");
  delay(10);
  while(1)
  {  //=1 BUSY;
    if(agrumino.readGPIO(GPIO_2)==1) 
      break;
    delay(1);
  }
  delay(10);
    Serial.println("Down");
}
void EPD_1in9_Reset()
{

  agrumino.writeGPIO(GPIO_1, HIGH);
  delay(200);
  agrumino.writeGPIO(GPIO_1, LOW);
  delay(20);
  agrumino.writeGPIO(GPIO_1, HIGH);
  delay(200);
}


void setup()
{

  Serial.begin(115200); // start serial communication
  agrumino.setup();
  delay(200);
  agrumino.turnBoardOn();
  delay(200);
  Wire.begin();  // start I2C commnunication with the e-ink display
  Serial.println("Clear");
  GPIOInit();
  EPD_1in9_init();

}

void loop()
{

  temperature_value = agrumino.readTempC(); // set the temperature
  humidity_value = agrumino.readSoil(); // set the humidity
  Serial.println("temperature is:  " + String(temperature_value));
  Serial.println("humidity is:  " + String(humidity_value));
  // some updates for the e-ink display, I don´t understand most of it, so I´m keepin it here
  EPD_1in9_lut_5S();
  EPD_1in9_Write_Screen(DSPNUM_1in9_off);
  delay(500);
  EPD_1in9_lut_GC();
  EPD_1in9_lut_DU_WB();

  // set correct digits values based on the temperature
  temperature_digits[0] = int(temperature_value / 100) % 10;
  temperature_digits[1] = int(temperature_value / 10) % 10;
  temperature_digits[2] = int(temperature_value ) % 10;
  temperature_digits[3] = int(temperature_value * 10) % 10;

  // set correct digits values based on the humidity
  humidity_digits[0] = int(humidity_value / 10) % 10;
  humidity_digits[1] = int(humidity_value ) % 10;
  humidity_digits[2] = int(humidity_value * 10) % 10;

  // do not show leading zeros for values <100 and <10 both temperature and humidity
  if (temperature_value < 100) {temperature_digits[0] = 10;}
  if (temperature_value < 10) {temperature_digits[1] = 10;}  

  if (humidity_value < 10) {humidity_digits[0] = 10;}    

  // temperature digits
  eink_segments[0] = digit_right[temperature_digits[0]];
  eink_segments[1] = digit_left[temperature_digits[1]];
  eink_segments[2] = digit_right[temperature_digits[1]];  
  eink_segments[3] = digit_left[temperature_digits[2]];
  eink_segments[4] = digit_right[temperature_digits[2]] | B00100000 /* decimal point */;   
  eink_segments[11] = digit_left[temperature_digits[3]];
  eink_segments[12] = digit_right[temperature_digits[3]];    

  // humidity digits
  eink_segments[5] = digit_left[humidity_digits[0]];
  eink_segments[6] = digit_right[humidity_digits[0]];    
  eink_segments[7] = digit_left[humidity_digits[1]];
  eink_segments[8] = digit_right[humidity_digits[1]] | B00100000 /* decimal point */;        
  eink_segments[9] = digit_left[humidity_digits[2]];
  eink_segments[10] = digit_right[humidity_digits[2]] | B00100000 /* percentage sign */;  
  // special symbols - °C / °F, bluetooth, battery
  eink_segments[13] = 0x05 /* °C */ | B00001000 /* bluetooth */ | B00010000 /* battery icon */;
  // write segments to the e-ink screen
  EPD_1in9_Write_Screen(eink_segments);
  EPD_1in9_sleep();
  agrumino.turnBoardOff();
  deepSleepSec(SLEEP_TIME_SEC);
}